const { cmd, commands } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');
const config = require('../settings');

cmd({
    pattern: "alive",
   // alias: ["status2", "online2"],
    desc: "Check bot is alive or not",
    category: "main",
    react: "ü§Ø",
    filename: __filename
},
async (conn, mek, m, { from, sender, reply, pushname }) => {
    try {
        const status = `üëã * ú·¥á ü ü·¥è ${pushname} ùò∏ùò¶ùò≠ùò§ùò∞ùòÆùò¶ ùòµùò∞ Íú±·¥á…¥·¥ú·¥¢-·¥ç·¥Ö üòó*

*‚ï≠‚îÄ„Äå  ô·¥è·¥õ Íú±·¥õ·¥Ä·¥õ·¥úÍú± ·¥Ö·¥á·¥õ·¥Ä…™ üÍú± „Äç*
*‚îÇ*üëæ *Bot*= *Íú±·¥á…¥·¥ú·¥¢-·¥ç·¥Ö*
*‚îÇ*‚è∞ *Uptime*= ${runtime(process.uptime())}
*‚îÇ*üìÇ *Ram*= ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${(os.totalmem() / 1024 / 1024).toFixed(2)}MB
*‚îÇ*‚úíÔ∏è *Prefix*= . 
*‚îÇ*üåÄ *Host* = ${os.hostname()}
*‚îÇ*‚ö° *Version* = 1.0.0  ô·¥á·¥õ·¥Ä
*‚îÇ*üí® *Mode* = [${config.MODE}]
*‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫*

> ${config.DESCRIPTION}`;

        await conn.sendMessage(from, {
            image: { url: config.MENU_IMAGE_URL },
            caption: status,          
        }, { quoted: mek });

    } catch (e) {
        console.error("Alive Error:", e);
        reply(`An error occurred: ${e.message}`);
    }
});

cmd(
  {
    pattern: "ping",
    alias: ["speed","pong"],
    use: '.ping',
    desc: "Check bot's response time.",
    category: "main",
    react: "üöÄ",
    filename: __filename
  }, async (
    conn,
    mek,
    m, {
      from,
      reply
    }
  ) => {
    try {
      const start = new Date().getTime();
      
      const end = new Date().getTime();
      const responseTime = (end - start) / 1000;
      
      const text = `*üìç ·¥ò·¥è…¥…¢ : ${responseTime.toFixed(2)}–º—ï*`;
      
      await conn.sendMessage(from, {
            text
        });
      
    } catch (e) {
      console.log(e)
    }
  }
);